{"remainingRequest":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/babel-loader/lib/index.js!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/ts-loader/index.js??ref--13-2!/Users/jiweiqing/开发/GitHub/jwq-count-app/src/utils/fn.ts","dependencies":[{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/src/utils/fn.ts","mtime":1573368870157},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Fn from \"jj-browser-fn\";\nimport RoomFn from \"./room\";\nimport PageApi from \"@/apis/pageApi\";\nimport { Toast } from \"mint-ui\";\n\nvar ProjFn = _objectSpread({}, Fn, {}, RoomFn, {\n  // 跳转路由\n  toRoute: function toRoute(route) {\n    window.App.$router.push({\n      path: route\n    });\n  },\n  backLogin: function backLogin() {\n    window.App.$router.push({\n      path: PageApi.login.path\n    });\n  },\n  // 添加全局公共方法\n  checkHttpResponse: function checkHttpResponse(res, errorFn, isNotice) {\n    return new Promise(function (resolve) {\n      if (res && ProjFn.n(res.code) === 200) {\n        resolve(res.data);\n      } else {\n        // tslint:disable-next-line:no-unused-expression\n        errorFn ? errorFn(res) : \"\";\n\n        if (isNotice) {\n          Toast({\n            message: res.msg,\n            iconClass: \"icon icon-error\",\n            position: \"top\"\n          });\n        }\n      }\n    });\n  },\n  showMsgResponse: function showMsgResponse(res, errorFn) {\n    return ProjFn.checkHttpResponse(res, errorFn, true);\n  },\n  handleResponse: function handleResponse(res, errorFn) {\n    return ProjFn.checkHttpResponse(res, errorFn, false);\n  }\n});\n\nexport default ProjFn;",{"version":3,"sources":["/Users/jiweiqing/开发/GitHub/jwq-count-app/src/utils/fn.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAP,MAAe,eAAf;AACA,OAAO,MAAP;AACA,OAAO,OAAP,MAAoB,gBAApB;AACA,SAAS,KAAT,QAAsB,SAAtB;;AACA,IAAM,MAAM,qBACL,EADK,MAEL,MAFK;AAGR;AACA,EAAA,OAAO,EAAE,iBAAC,KAAD,EAAkB;AACvB,IAAA,MAAM,CAAC,GAAP,CAAW,OAAX,CAAmB,IAAnB,CAAwB;AACpB,MAAA,IAAI,EAAE;AADc,KAAxB;AAGH,GARO;AASR,EAAA,SAAS,EAAE,qBAAK;AACZ,IAAA,MAAM,CAAC,GAAP,CAAW,OAAX,CAAmB,IAAnB,CAAwB;AACpB,MAAA,IAAI,EAAE,OAAO,CAAC,KAAR,CAAc;AADA,KAAxB;AAGH,GAbO;AAcR;AACA,EAAA,iBAAiB,EAAE,2BAAC,GAAD,EAAW,OAAX,EAAyB,QAAzB,EAA8C;AAC7D,WAAO,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AACzB,UAAI,GAAG,IAAI,MAAM,CAAC,CAAP,CAAS,GAAG,CAAC,IAAb,MAAuB,GAAlC,EAAuC;AACnC,QAAA,OAAO,CAAC,GAAG,CAAC,IAAL,CAAP;AACH,OAFD,MAEO;AACH;AACA,QAAA,OAAO,GAAG,OAAO,CAAC,GAAD,CAAV,GAAkB,EAAzB;;AACA,YAAI,QAAJ,EAAc;AACV,UAAA,KAAK,CAAC;AACF,YAAA,OAAO,EAAE,GAAG,CAAC,GADX;AAEF,YAAA,SAAS,EAAE,iBAFT;AAGF,YAAA,QAAQ,EAAE;AAHR,WAAD,CAAL;AAKH;AACJ;AACJ,KAdM,CAAP;AAeH,GA/BO;AAgCR,EAAA,eAAe,EAAE,yBAAC,GAAD,EAAW,OAAX,EAA4B;AACzC,WAAO,MAAM,CAAC,iBAAP,CAAyB,GAAzB,EAA8B,OAA9B,EAAuC,IAAvC,CAAP;AACH,GAlCO;AAmCR,EAAA,cAAc,EAAE,wBAAC,GAAD,EAAW,OAAX,EAA2B;AACvC,WAAO,MAAM,CAAC,iBAAP,CAAyB,GAAzB,EAA8B,OAA9B,EAAuC,KAAvC,CAAP;AACH;AArCO,EAAZ;;AAwCA,eAAe,MAAf","sourcesContent":["import Fn from \"jj-browser-fn\";\nimport RoomFn from \"./room\";\nimport PageApi from \"@/apis/pageApi\";\nimport { Toast } from \"mint-ui\";\nconst ProjFn = {\n    ...Fn,\n    ...RoomFn,\n    // 跳转路由\n    toRoute: (route: string) => {\n        window.App.$router.push({\n            path: route\n        });\n    },\n    backLogin: () => {\n        window.App.$router.push({\n            path: PageApi.login.path\n        });\n    },\n    // 添加全局公共方法\n    checkHttpResponse: (res: any, errorFn: any, isNotice: boolean) => {\n        return new Promise(resolve => {\n            if (res && ProjFn.n(res.code) === 200) {\n                resolve(res.data);\n            } else {\n                // tslint:disable-next-line:no-unused-expression\n                errorFn ? errorFn(res) : \"\";\n                if (isNotice) {\n                    Toast({\n                        message: res.msg,\n                        iconClass: \"icon icon-error\",\n                        position: \"top\"\n                    });\n                }\n            }\n        });\n    },\n    showMsgResponse: (res: any, errorFn?: any) => {\n        return ProjFn.checkHttpResponse(res, errorFn, true);\n    },\n    handleResponse: (res: any, errorFn: any) => {\n        return ProjFn.checkHttpResponse(res, errorFn, false);\n    }\n};\n\nexport default ProjFn;\n"],"sourceRoot":""}]}