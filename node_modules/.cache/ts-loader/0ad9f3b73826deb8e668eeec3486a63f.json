{"remainingRequest":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/thread-loader/dist/cjs.js!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/babel-loader/lib/index.js!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/ts-loader/index.js??ref--13-3!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiweiqing/开发/GitHub/jwq-count-app/src/views/Score/id/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/src/views/Score/id/index.vue","mtime":1573383704994},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport { __decorate } from \"tslib\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Toast, MessageBox } from \"mint-ui\";\nimport { getScoreList as _getScoreList, handleRoomScore, getRoomInfo as _getRoomInfo } from \"@/req/count\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(Home, _Vue);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n    _this.popupVisible = false;\n    _this.popupListVisible = false;\n    _this.viewList = [];\n    _this.roomInfo = {\n      nick_name_list: []\n    };\n    _this.scoreList = [// {\n      //     roundId: 2,\n      //     list: [\n      //         {\n      //             addr: 2,\n      //             score: -2\n      //         }\n      //     ]\n      // },\n      // {\n      //     roundId: 1,\n      //     list: [\n      //         {\n      //             addr: 1,\n      //             score: -2\n      //         }\n      //     ]\n      // }\n    ];\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"view\",\n    value: function view(list, idx) {\n      this.viewList = list;\n      console.log(list);\n      this.popupListVisible = true;\n    }\n  }, {\n    key: \"mounted\",\n    value: function mounted() {\n      var _this2 = this;\n\n      window.countFn.updateScoreList = function () {\n        _this2.getScoreList();\n      };\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to, from, next) {\n      next(function (vm) {\n        if (window.countFn.updateAddrs === undefined) {\n          return vm.$fn.toRoom(vm.$route.params.id);\n        }\n\n        vm.getScoreList();\n        vm.getRoomInfo();\n      });\n    }\n  }, {\n    key: \"getScoreList\",\n    value: function () {\n      var _getScoreList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = this.$fn;\n                _context.next = 3;\n                return _getScoreList({\n                  roomId: this.$route.params.id\n                });\n\n              case 3:\n                _context.t1 = _context.sent;\n                _context.next = 6;\n                return _context.t0.showMsgResponse.call(_context.t0, _context.t1);\n\n              case 6:\n                res = _context.sent;\n                this.scoreList = res.list;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getScoreList() {\n        return _getScoreList2.apply(this, arguments);\n      }\n\n      return getScoreList;\n    }()\n  }, {\n    key: \"calcRound\",\n    value: function calcRound(round) {\n      var _this3 = this;\n\n      MessageBox.prompt(\"\\u8BF7\\u8F93\\u5165\\u4F60\\u5728\\u7B2C\".concat(round, \"\\u8F6E\\u7684\\u5206\\u6570\")).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(_ref) {\n          var value, action, res;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  value = _ref.value, action = _ref.action;\n\n                  if (!(value < 0 || value === \"0\" || value > 0)) {\n                    _context2.next = 11;\n                    break;\n                  }\n\n                  _context2.t0 = _this3.$fn;\n                  _context2.next = 5;\n                  return handleRoomScore({\n                    roomId: _this3.$route.params.id,\n                    addrId: Number(_this3.$route.query.addr),\n                    roundId: Number(round),\n                    score: Number(value)\n                  });\n\n                case 5:\n                  _context2.t1 = _context2.sent;\n                  _context2.next = 8;\n                  return _context2.t0.showMsgResponse.call(_context2.t0, _context2.t1);\n\n                case 8:\n                  res = _context2.sent;\n                  _context2.next = 12;\n                  break;\n\n                case 11:\n                  Toast({\n                    message: \"请输入整数或者负整数\",\n                    iconClass: \"icon icon-error\",\n                    position: \"top\"\n                  });\n\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"getRoomInfo\",\n    value: function () {\n      var _getRoomInfo2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var roomInfo;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                roomInfo = {}; // roomInfo = {\n                //     id: 47,\n                //     room_id: \"1150717815\",\n                //     room_name: \"asdf\",\n                //     count: 123,\n                //     enter_code: \"1234\",\n                //     nick_name_list: \"唐僧,黑熊精,观音,刘备\",\n                //     create_time: \"2019-10-15T14:45:17.000Z\"\n                // };\n\n                _context3.t0 = this.$fn;\n                _context3.next = 4;\n                return _getRoomInfo({\n                  roomId: this.$route.params.id\n                });\n\n              case 4:\n                _context3.t1 = _context3.sent;\n                _context3.next = 7;\n                return _context3.t0.showMsgResponse.call(_context3.t0, _context3.t1);\n\n              case 7:\n                roomInfo = _context3.sent;\n                roomInfo.nick_name_list = roomInfo.nick_name_list.split(\",\");\n                this.roomInfo = roomInfo;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getRoomInfo() {\n        return _getRoomInfo2.apply(this, arguments);\n      }\n\n      return getRoomInfo;\n    }()\n  }, {\n    key: \"selfInfo\",\n    get: function get() {\n      var _this4 = this;\n\n      var self = {\n        score: 0\n      };\n      var score = 0;\n      this.scoreList.map(function (i) {\n        i.list.forEach(function (j) {\n          if (Number(j.addr) === Number(_this4.$route.query.addr)) {\n            score += Number(j.score === undefined ? 0 : j.score);\n          }\n        });\n      });\n      self.score = score;\n      return self;\n    }\n  }, {\n    key: \"totalScoreList\",\n    get: function get() {\n      var _this5 = this;\n\n      var list = [];\n\n      var _loop = function _loop(a) {\n        var score = 0;\n\n        _this5.scoreList.map(function (i) {\n          i.list.forEach(function (j) {\n            if (Number(j.addr) === Number(a)) {\n              score += Number(j.score === undefined ? 0 : j.score);\n            }\n          });\n        });\n\n        list.push({\n          addr: a,\n          name: _this5.roomInfo.nick_name_list[a],\n          score: score\n        });\n      };\n\n      for (var a = 0; a < this.roomInfo.nick_name_list.length; a++) {\n        _loop(a);\n      }\n\n      return list.sort(function (a, b) {\n        return b.score - a.score;\n      });\n    }\n  }, {\n    key: \"handleScoreList\",\n    get: function get() {\n      var _this6 = this;\n\n      return this.scoreList.map(function (i) {\n        i.total = 0;\n        i.list.forEach(function (j) {\n          if (Number(j.addr) === Number(_this6.$route.query.addr)) {\n            i.score = j.score;\n          }\n\n          i.total += Number(j.score === undefined ? 0 : j.score);\n        });\n        return i;\n      });\n    }\n  }]);\n\n  return Home;\n}(Vue);\n\nHome = __decorate([Component], Home);\nexport default Home;",{"version":3,"sources":["/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiweiqing/开发/GitHub/jwq-count-app/src/views/Score/id/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Toast, MessageBox, Popup } from \"mint-ui\";\nimport { getScoreList, handleRoomScore, getRoomInfo } from \"@/req/count\";\n@Component\nexport default class Home extends Vue {\n    public popupVisible = false;\n    public popupListVisible = false;\n    public viewList: any = [];\n    public roomInfo: any = {\n        nick_name_list: []\n    };\n    public scoreList: any = [\n        // {\n        //     roundId: 2,\n        //     list: [\n        //         {\n        //             addr: 2,\n        //             score: -2\n        //         }\n        //     ]\n        // },\n        // {\n        //     roundId: 1,\n        //     list: [\n        //         {\n        //             addr: 1,\n        //             score: -2\n        //         }\n        //     ]\n        // }\n    ];\n    public get selfInfo() {\n        const self: any = {\n            score: 0\n        };\n        let score = 0;\n        this.scoreList.map(i => {\n            i.list.forEach(j => {\n                if (Number(j.addr) === Number(this.$route.query.addr)) {\n                    score += Number(j.score === undefined ? 0 : j.score);\n                }\n            });\n        });\n        self.score = score;\n        return self;\n    }\n    public get totalScoreList() {\n        const list: any = [];\n        for (let a = 0; a < this.roomInfo.nick_name_list.length; a++) {\n            let score = 0;\n            this.scoreList.map(i => {\n                i.list.forEach(j => {\n                    if (Number(j.addr) === Number(a)) {\n                        score += Number(j.score === undefined ? 0 : j.score);\n                    }\n                });\n            });\n            list.push({\n                addr: a,\n                name: this.roomInfo.nick_name_list[a],\n                score\n            });\n        }\n        return list.sort((a, b) => b.score - a.score);\n    }\n    public view(list, idx) {\n        this.viewList = list;\n        console.log(list);\n        this.popupListVisible = true;\n    }\n    public get handleScoreList() {\n        return this.scoreList.map(i => {\n            i.total = 0;\n            i.list.forEach(j => {\n                if (Number(j.addr) === Number(this.$route.query.addr)) {\n                    i.score = j.score;\n                }\n                i.total += Number(j.score === undefined ? 0 : j.score);\n            });\n            return i;\n        });\n    }\n    public mounted() {\n        window.countFn.updateScoreList = () => {\n            this.getScoreList();\n        };\n    }\n    public beforeRouteEnter(to, from, next) {\n        next(vm => {\n            if (window.countFn.updateAddrs === undefined) {\n                return vm.$fn.toRoom(vm.$route.params.id);\n            }\n            vm.getScoreList();\n            vm.getRoomInfo();\n        });\n    }\n    public async getScoreList() {\n        const res = await this.$fn.showMsgResponse(\n            await getScoreList({\n                roomId: this.$route.params.id\n            })\n        );\n        this.scoreList = res.list;\n    }\n    public calcRound(round) {\n        MessageBox.prompt(`请输入你在第${round}轮的分数`).then(\n            async ({ value, action }) => {\n                if (value < 0 || value === \"0\" || value > 0) {\n                    const res = await this.$fn.showMsgResponse(\n                        await handleRoomScore({\n                            roomId: this.$route.params.id,\n                            addrId: Number(this.$route.query.addr),\n                            roundId: Number(round),\n                            score: Number(value)\n                        })\n                    );\n                } else {\n                    Toast({\n                        message: \"请输入整数或者负整数\",\n                        iconClass: \"icon icon-error\",\n                        position: \"top\"\n                    });\n                }\n            }\n        );\n    }\n    public async getRoomInfo() {\n        let roomInfo: any = {};\n        // roomInfo = {\n        //     id: 47,\n        //     room_id: \"1150717815\",\n        //     room_name: \"asdf\",\n        //     count: 123,\n        //     enter_code: \"1234\",\n        //     nick_name_list: \"唐僧,黑熊精,观音,刘备\",\n        //     create_time: \"2019-10-15T14:45:17.000Z\"\n        // };\n        roomInfo = await this.$fn.showMsgResponse(\n            await getRoomInfo({\n                roomId: this.$route.params.id\n            })\n        );\n        roomInfo.nick_name_list = roomInfo.nick_name_list.split(\",\");\n        this.roomInfo = roomInfo;\n    }\n}\n"],"sourceRoot":""}]}