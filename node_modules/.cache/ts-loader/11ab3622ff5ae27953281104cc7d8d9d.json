{"remainingRequest":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/thread-loader/dist/cjs.js!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/babel-loader/lib/index.js!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/ts-loader/index.js??ref--13-3!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiweiqing/开发/GitHub/jwq-count-app/src/views/Home/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/src/views/Home/index.vue","mtime":1573372273027},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _classCallCheck from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiweiqing/\\u5F00\\u53D1/GitHub/jwq-count-app/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport { __decorate } from \"tslib\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Toast } from \"mint-ui\";\nimport { createRoom as _createRoom } from \"@/req/count\";\nimport QRCode from \"qrcodejs2\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(Home, _Vue);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n    _this.QRcode = {};\n    _this.roomId = \"\";\n    _this.roomName = \"房号\" + new Date().getTime().toString(36).slice(-8);\n    _this.roomNum = 4;\n    _this.state = false;\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"back\",\n    value: function back() {\n      window.location.reload();\n    }\n  }, {\n    key: \"toRoom\",\n    value: function toRoom() {\n      this.$fn.toRoom(this.roomId);\n    }\n  }, {\n    key: \"createRoom\",\n    value: function () {\n      var _createRoom2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var href, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.roomName === \"\")) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Toast({\n                  message: \"您的房间名称不正确！\",\n                  iconClass: \"icon icon-error\",\n                  position: \"top\"\n                }));\n\n              case 2:\n                if (/\\d+/.test(String(this.roomNum))) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Toast({\n                  message: \"您的房间人数不正确\",\n                  iconClass: \"icon icon-error\",\n                  position: \"top\"\n                }));\n\n              case 4:\n                href = \"https://jiweiqing.cn\";\n                _context.t0 = this.$fn;\n                _context.next = 8;\n                return _createRoom({\n                  roomName: this.roomName,\n                  count: this.roomNum\n                });\n\n              case 8:\n                _context.t1 = _context.sent;\n                _context.next = 11;\n                return _context.t0.showMsgResponse.call(_context.t0, _context.t1);\n\n              case 11:\n                res = _context.sent;\n                this.roomId = res.roomId;\n                href = this.$fn.getQrRoomHref(res.roomId);\n                this.state = true;\n\n                if (!this.QRcode.clear) {\n                  _context.next = 17;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.QRcode.makeCode(this.$fn.getQrRoomHref(this.$route.params.roomId)));\n\n              case 17:\n                this.QRcode = new QRCode(this.$refs.qrCodeDiv, {\n                  text: this.$fn.getQrRoomHref(res.roomId),\n                  width: 200,\n                  height: 200,\n                  colorDark: \"#333333\",\n                  colorLight: \"#ffffff\",\n                  correctLevel: QRCode.CorrectLevel.L // 容错率，L/M/H\n\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createRoom() {\n        return _createRoom2.apply(this, arguments);\n      }\n\n      return createRoom;\n    }()\n  }]);\n\n  return Home;\n}(Vue);\n\nHome = __decorate([Component], Home);\nexport default Home;",{"version":3,"sources":["/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiweiqing/开发/GitHub/jwq-count-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiweiqing/开发/GitHub/jwq-count-app/src/views/Home/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;AAgDA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,UAAU,IAAV,WAAT,QAA2B,aAA3B;AACA,OAAO,MAAP,MAAmB,WAAnB;;AAEA,IAAqB,IAArB;AAAA;AAAA;AAAA;;AAAA,kBAAA;AAAA;;AAAA;;;AACW,UAAA,MAAA,GAAc,EAAd;AACA,UAAA,MAAA,GAAS,EAAT;AACA,UAAA,QAAA,GACH,OACA,IAAI,IAAJ,GACK,OADL,GAEK,QAFL,CAEc,EAFd,EAGK,KAHL,CAGW,CAAC,CAHZ,CAFG;AAMA,UAAA,OAAA,GAAU,CAAV;AACA,UAAA,KAAA,GAAQ,KAAR;AAVX;AAwDC;;AAxDD;AAAA;AAAA,2BAWe;AACP,MAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB;AACH;AAbL;AAAA;AAAA,6BAciB;AACT,WAAK,GAAL,CAAS,MAAT,CAAgB,KAAK,MAArB;AACH;AAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAkBY,KAAK,QAAL,KAAkB,EAlB9B;AAAA;AAAA;AAAA;;AAAA,iDAmBmB,KAAK,CAAC;AACT,kBAAA,OAAO,EAAE,YADA;AAET,kBAAA,SAAS,EAAE,iBAFF;AAGT,kBAAA,QAAQ,EAAE;AAHD,iBAAD,CAnBxB;;AAAA;AAAA,oBAyBa,MAAM,IAAN,CAAW,MAAM,CAAC,KAAK,OAAN,CAAjB,CAzBb;AAAA;AAAA;AAAA;;AAAA,iDA0BmB,KAAK,CAAC;AACT,kBAAA,OAAO,EAAE,WADA;AAET,kBAAA,SAAS,EAAE,iBAFF;AAGT,kBAAA,QAAQ,EAAE;AAHD,iBAAD,CA1BxB;;AAAA;AAgCY,gBAAA,IAhCZ,GAgCmB,sBAhCnB;AAAA,8BAiC+B,KAAK,GAjCpC;AAAA;AAAA,uBAkCkB,WAAU,CAAC;AACb,kBAAA,QAAQ,EAAE,KAAK,QADF;AAEb,kBAAA,KAAK,EAAE,KAAK;AAFC,iBAAD,CAlC5B;;AAAA;AAAA;AAAA;AAAA,mCAiCwC,eAjCxC;;AAAA;AAiCc,gBAAA,GAjCd;AAuCQ,qBAAK,MAAL,GAAc,GAAG,CAAC,MAAlB;AACA,gBAAA,IAAI,GAAG,KAAK,GAAL,CAAS,aAAT,CAAuB,GAAG,CAAC,MAA3B,CAAP;AACA,qBAAK,KAAL,GAAa,IAAb;;AAzCR,qBA0CY,KAAK,MAAL,CAAY,KA1CxB;AAAA;AAAA;AAAA;;AAAA,iDA2CmB,KAAK,MAAL,CAAY,QAAZ,CACH,KAAK,GAAL,CAAS,aAAT,CAAuB,KAAK,MAAL,CAAY,MAAZ,CAAmB,MAA1C,CADG,CA3CnB;;AAAA;AA+CQ,qBAAK,MAAL,GAAc,IAAI,MAAJ,CAAW,KAAK,KAAL,CAAW,SAAtB,EAAiC;AAC3C,kBAAA,IAAI,EAAE,KAAK,GAAL,CAAS,aAAT,CAAuB,GAAG,CAAC,MAA3B,CADqC;AAE3C,kBAAA,KAAK,EAAE,GAFoC;AAG3C,kBAAA,MAAM,EAAE,GAHmC;AAI3C,kBAAA,SAAS,EAAE,SAJgC;AAK3C,kBAAA,UAAU,EAAE,SAL+B;AAM3C,kBAAA,YAAY,EAAE,MAAM,CAAC,YAAP,CAAoB,CANS,CAMP;;AANO,iBAAjC,CAAd;;AA/CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAkC,GAAlC,CAAA;;AAAqB,IAAI,GAAA,UAAA,CAAA,CADxB,SACwB,CAAA,EAAJ,IAAI,CAAJ;eAAA,I","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Toast } from \"mint-ui\";\nimport { createRoom } from \"@/req/count\";\nimport QRCode from \"qrcodejs2\";\n@Component\nexport default class Home extends Vue {\n    public QRcode: any = {};\n    public roomId = \"\";\n    public roomName =\n        \"房号\" +\n        new Date()\n            .getTime()\n            .toString(36)\n            .slice(-8);\n    public roomNum = 4;\n    public state = false;\n    public back() {\n        window.location.reload();\n    }\n    public toRoom() {\n        this.$fn.toRoom(this.roomId);\n    }\n    public async createRoom() {\n        if (this.roomName === \"\") {\n            return Toast({\n                message: \"您的房间名称不正确！\",\n                iconClass: \"icon icon-error\",\n                position: \"top\"\n            });\n        }\n        if (!/\\d+/.test(String(this.roomNum))) {\n            return Toast({\n                message: \"您的房间人数不正确\",\n                iconClass: \"icon icon-error\",\n                position: \"top\"\n            });\n        }\n        let href = \"https://jiweiqing.cn\";\n        const res: any = await this.$fn.showMsgResponse(\n            await createRoom({\n                roomName: this.roomName,\n                count: this.roomNum\n            })\n        );\n        this.roomId = res.roomId;\n        href = this.$fn.getQrRoomHref(res.roomId);\n        this.state = true;\n        if (this.QRcode.clear) {\n            return this.QRcode.makeCode(\n                this.$fn.getQrRoomHref(this.$route.params.roomId)\n            );\n        }\n        this.QRcode = new QRCode(this.$refs.qrCodeDiv, {\n            text: this.$fn.getQrRoomHref(res.roomId),\n            width: 200,\n            height: 200,\n            colorDark: \"#333333\", // 二维码颜色\n            colorLight: \"#ffffff\", // 二维码背景色\n            correctLevel: QRCode.CorrectLevel.L // 容错率，L/M/H\n        });\n    }\n}\n"],"sourceRoot":""}]}